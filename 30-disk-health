#!/bin/bash

# Set colors for better visibility
green=$(tput setaf 2)
yellow=$(tput setaf 3)
red=$(tput setaf 1)
reset=$(tput sgr0) # No Color

# Function to check disk status and display appropriate color
check_disk_status() {
    disk="$1"
    status=$(sudo smartctl -H $disk | awk '/test result/ {print $NF}')
    temperature=$(sudo smartctl -A $disk | awk '/Temperature_Celsius|Temperature_Internal/ {print $10}')

    # Set temperature to 0 if it's not a valid number
    if ! [[ "$temperature" =~ ^[0-9]+$ ]]; then
        temperature=00
    fi

    # Set the temperature color based on the thresholds
    if [ "$temperature" -ge 1 ] && [ "$temperature" -le 50 ]; then
        temp_color=$green
    elif [ "$temperature" -ge 51 ] && [ "$temperature" -le 60 ]; then
        temp_color=$yellow
    else
        temp_color=$red
    fi

    if [ "$status" == "PASSED" ]; then
        echo -e "${green}OK${reset} (${temp_color}${temperature}°C${reset})"
    elif [ "$status" == "FAILED!" ]; then
        echo -e "${red}FAIL${reset} (${temp_color}${temperature}°C${reset})"
    else
        echo -e "${yellow}WARN${reset} (${temp_color}${temperature}°C${reset})"
    fi
}

# Display disk information and status with aligned columns in groups of 3
echo "" # blank
echo -e "DISK HEALTH [${green}OK${reset}/${yellow}WARN${reset}/${red}FAIL${reset}]"
count=0
for disk in $(lsblk -o NAME -nl | grep -E '^sd[a-z]$|^nvme[0-9]n[0-9]$|^mmcblk[0-9]$|^xvd[a-z]$'); do
    status=$(check_disk_status "/dev/$disk")
    printf " %-11s%s" "$disk" "$status"
    ((count++))

    # Add a newline after every 3 disks
    if [ $count -lt 3 ]; then
        echo -n "   "
    else
        echo
        count=0
    fi
done

# Add a newline if the last group doesn't have 3 disks
if [ $count -ne 0 ]; then
    echo
fi
